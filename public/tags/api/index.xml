<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>api on Visualizing.JP</title>
        <link>https://example.com/tags/api/</link>
        <description>Recent content in api on Visualizing.JP</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja-jp</language>
        <copyright>Yuichi Yazaki</copyright>
        <lastBuildDate>Sun, 22 Sep 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/api/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>D3: データ形式</title>
        <link>https://example.com/d3-requests/</link>
        <pubDate>Sun, 22 Sep 2013 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/d3-requests/</guid>
        <description>&lt;img src="https://example.com/d3-requests/images/fi_D3DatFormat.png" alt="Featured image of post D3: データ形式" /&gt;&lt;p&gt;D3には、外部ファイルの読み込み用にいくつかヘルパー関数が用意されています。ファイル形式によって、D3に読み込んだ後のデータ保持の形式が異なるので一覧にするとこのような感じです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/d3-requests/images/d3Requests.png&#34;
	width=&#34;456&#34;
	height=&#34;372&#34;
	srcset=&#34;https://example.com/d3-requests/images/d3Requests_hu8d1d8ba7fd3645281d59c06d84c92ae4_36951_480x0_resize_box_3.png 480w, https://example.com/d3-requests/images/d3Requests_hu8d1d8ba7fd3645281d59c06d84c92ae4_36951_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;d3Requests&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;294px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mbostock/d3/wiki/CSV&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;APIリファレンスのd3.csv()項目&lt;/a&gt;をみると、d3.csv.parse()、d3.csv.parseRows()、d3.csv.format()、d3.csv.formatRows()、などというメソッドも用意されているような印象ですが、これらはd3.csv()が内部的に使用するので、通常はd3.csv()を利用すればよいです。&lt;br&gt;
csvは上図の通り、読み込まれるとデフォルトではオブジェクトの配列に変換されてしまうのですが、これを配列の配列（二次元配列）として読み込みたい場合には、d3.csv.parseRows()を使うのですが呼び出し方としては、汎用的なd3.text()を利用して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;d3.text(url, &amp;#34;text/csv&amp;#34;, function(text) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;var rows = d3.csv.parseRows(text);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;とすればよいようです。考え方と実装はtsvもdsvも同様のようです。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
